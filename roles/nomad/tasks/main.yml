- name: Create nomad user
  user:
    name: nomad
    shell: /usr/bin/false
    create_home: yes
    home: /opt/nomad

- name: Create nomad directory
  file:
    path: "/opt/nomad/{{ nomad_version }}"
    state: directory

- name: Download nomad binary
  get_url:
    url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_linux_amd64.zip"
    dest: "/opt/nomad/{{ nomad_version }}/nomad.zip"
    checksum: "sha256:{{ nomad_checksum }}"

- name: Extract nomad binary
  unarchive:
    src: "/opt/nomad/{{ nomad_version }}/nomad.zip"
    dest: "/opt/nomad/{{ nomad_version }}"
    creates: "/opt/nomad/{{ nomad_version }}/nomad"
    remote_src: yes

- name: Link nomad binary
  file:
    src: "/opt/nomad/{{ nomad_version }}/nomad"
    dest: /usr/bin/nomad
    owner: root
    state: link

- name: Delete old nomad
  shell: |
    cd /opt/nomad
    ls | grep -v {{ nomad_version }} | xargs rm -rfv

- name: Create nomad config directory
  file:
    path: /etc/nomad
    state: directory

- name: Create nomad config
  template:
    src: nomad.hcl.j2
    dest: /etc/nomad/nomad.hcl

- name: Create nomad data directory
  file:
    path: /var/lib/nomad
    owner: nomad
    group: nomad
    state: directory

- name: Create nomad systemd service
  copy:
    src: nomad.service
    dest: /etc/systemd/system/nomad.service

- name: Enable and start nomad service
  systemd:
    name: nomad.service
    daemon_reload: yes
    enabled: yes
    state: restarted

- name: Create CNI install directory
  file:
    path: /opt/cni/bin
    state: directory

- name: Check if CNI bridge binary already exists
  stat:
    path: /opt/cni/bin/bridge
  register: bridge_binary

- name: Download CNI binary
  unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.6.tgz
    dest: /opt/cni/bin
    remote_src: yes
  when: not bridge_binary.stat.exists
